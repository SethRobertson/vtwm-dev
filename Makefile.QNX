
# Here is a makefile for VTWM.
#
# It's a hand-tweaked version of the makefile made with xmkmf,
# it may prove useful as a template for those who don't have xmkmf.
#
# This makefile guarantees that the build info is absolutely current.
#
# djhjr

# =============== Start of common editables =====================

# To omit XPM image support for icons and buttons, uncomment this
# (version 3.4h of the XPM library is the earliest supported I know of)
#XPM_DEFINE = -DNO_XPM_SUPPORT
# and comment this
SYS_LIBRARIES = -lXpm

# To omit platform and build info in the version window, uncomment this
#INFO_DEFINE = -DNO_BUILD_INFO

# If your system has putenv(), comment this
PUTENV_DEFINE = -DNO_PUTENV

# If your system doesn't have sys/select.h, comment this
SELECT_DEFINE = -DHAVE_SELECT_H

# If your system doesn't have process.h, comment this
PROCESS_DEFINE = -DHAVE_PROCESS_H

# For those systems that have TWM installed in locations other than
# the "default" for the $(LIBDIR) macro, change this to match
VTWMDIR = $(LIBDIR)/twm

CDEBUGFLAGS =
CCOPTIONS = -Otx -zp1 -mf -b -j -Wc,-s -N32k -w4

# ================ End of common editables ======================

# ============= Start of less common editables ==================

MV = mv
RM = rm -f
CC = cc
LEX = lex
YACC = yacc

YFLAGS = -d

LIBDIR = /usr/lib/X11
USRLIBDIR = /usr/lib/X11

# Handy for developers to check man page editions
# (see the end of this file)
DEROFF = deroff
DW = dw
SPELL = spell

# Required to generate HTML or Postscript versions of the man page
# (see the end of this file)
MAN2HTML = man2html
MAN2PS = man2ps

# ============== End of less common editables ===================

# ========= Editing below here should not be necessary ==========

XMULIB = -lXmu
XTOOLLIB =
EXTENSIONLIB = -lXext
XLIB = $(EXTENSIONLIB) -lX11_s

LOCAL_LIBRARIES = $(XMULIB) $(XTOOLLIB) $(XLIB)
EXTRA_LIBRARIES = -lXqnx -lsocket
LDLIBS = $(LOCAL_LIBRARIES) $(EXTRA_LIBRARIES) $(SYS_LIBRARIES)

INCLUDES =
EXTRA_INCLUDES = 
STD_INCLUDES =

ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(STD_INCLUDES)

STD_DEFINES = -D__QNX__ -DMetroLink -DSTRINGS_ALIGNED -DNO_REGEX -DBOGUS_MB_MAX
EXTRA_DEFINES = $(XPM_DEFINE) $(INFO_DEFINE) $(PUTENV_DEFINE) $(SELECT_DEFINE) $(PROCESS_DEFINE)
PROTO_DEFINES =

ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES)

CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES) -L$(USRLIBDIR)

SRCS = gram.c lex.c deftwmrc.c add_window.c gc.c list.c twm.c \
	parse.c menus.c events.c resize.c util.c version.c iconmgr.c \
	cursor.c icons.c desktop.c doors.c lastmake.c

OBJS = gram.o lex.o deftwmrc.o add_window.o gc.o list.o twm.o \
	parse.o menus.o events.o resize.o util.o version.o iconmgr.o \
	cursor.o icons.o desktop.o doors.o lastmake.o

all: vtwm

parse.o: parse.c
	$(RM) $@
	$(CC) -c $(CFLAGS) '-DSYSTEM_VTWMRC="'$(VTWMDIR)'/system.vtwmrc"' '-DSYSTEM_TWMRC="'$(VTWMDIR)'/system.twmrc"' parse.c

depend: lex.c gram.c deftwmrc.c lastmake.c

PROGRAM = vtwm

all: vtwm

vtwm: $(OBJS) version.c
	$(RM) $@
	$(CC) -o $@ $(OBJS) $(CFLAGS) $(LDLIBS)
	$(RM) lastmake.*

lex.o: gram.h

gram.h: gram.c
	$(MV) y.tab.h gram.h

gram.c: gram.y
	$(YACC) $(YFLAGS) gram.y
	$(MV) y.tab.c gram.c

clean:
	$(RM) $(PROGRAM) *.o *.b *.err y.tab.h y.tab.c lex.yy.c gram.h gram.c lex.c deftwmrc.c lastmake.c

deftwmrc.o: deftwmrc.c
	$(CC) -c $(CFLAGS) deftwmrc.c

deftwmrc.c:  system.vtwmrc
	$(RM) $@
	echo '/* ' >>$@
	echo ' * This file is generated automatically from the default' >>$@
	echo ' * VTWM bindings file system.vtwmrc by the VTWM Imakefile.' >>$@
	echo ' */' >>$@
	echo '' >>$@
	echo 'char *defTwmrc[] = {' >>deftwmrc.c
	sed -e '/^#/d' -e 's/"/\\"/g' -e 's/^/    "/' -e 's/$$/",/' system.vtwmrc >>$@
	echo '    (char *) 0 };' >>$@

lastmake.o: lastmake.c
	$(CC) -c $(CFLAGS) lastmake.c

lastmake.c:
	$(RM) $@
	echo '/* ' >>$@
	echo ' * This file is generated automatically by the VTWM Imakefile.' >>$@
	echo ' */' >>$@
	echo '' >>$@
	echo 'char *lastmake[] = {' >>lastmake.c
	echo '    "Platform:  '`uname -s`' Version '`uname -v`' Release '`uname -r`'",' >>$@
	echo '    "Build:  '`date`'",' >>$@
	echo '    "" };' >>$@

# Handy for developers to check the man page
dw vtwm.dw: vtwm.man
	$(DEROFF) vtwm.man | $(DW) >vtwm.dw
	@if test -s vtwm.dw ; \
	then \
	    echo Doubled words in vtwm.man ... ; \
	    cat vtwm.dw ; \
	fi
spell vtwm.ser: vtwm.man vtwm.sok
	$(DEROFF) vtwm.man | $(SPELL) +vtwm.sok >vtwm.ser
	@if test -s vtwm.ser ; \
	then \
	    echo Spelling exceptions in vtwm.man ... ; \
	    cat vtwm.ser ; \
	fi

# If you wish to generate HTML or Postscript versions of the man page,
# enter 'make vtwm.html' or 'make vtwm.ps'
vtwm.html: vtwm.man
	$(MAN2HTML) vtwm.man
vtwm.ps: vtwm.man
	$(MAN2PS) < $< >$@
